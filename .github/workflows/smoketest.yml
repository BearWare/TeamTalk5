name: SmokeTest

on: [push, pull_request]

env:
  # TeamTalk unit test environment variables
  INPUTDEVICEID: 1978
  OUTPUTDEVICEID: 1978
  VIDEODEVICEID: None
  VERBOSE: 0
  GITHUBSKIP: 1

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v5
      with:
        submodules: true

    - uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Refresh Ubuntu-repo
      run: sudo apt-get update

    - name: Update packages
      run: |
        sudo apt-get dist-upgrade
        sudo apt-get autoremove --purge
        # Ensure FFmpeg doesn't detect additional dependencies
        sudo apt-get autoremove --purge libmagickcore-dev libmagickwand-dev libbz2-dev liblzma-dev

    - name: Install Dependencies
      run: >-
           sudo apt-get install
           cmake
           doxygen
           junit4
           libace-dev
           libace-inet-dev
           libace-inet-ssl-dev
           libace-ssl-dev
           libasound2-dev
           libogg-dev
           libopus-dev
           libpcap-dev
           libqt5texttospeech5-dev
           libqt5x11extras5-dev
           libspeex-dev
           libspeexdsp-dev
           libssl-dev
           libtinyxml-dev
           libvpx-dev
           libxss-dev
           ninja-build
           portaudio19-dev
           python3-minimal
           python3-pytest
           qtbase5-dev
           qtmultimedia5-dev
           qttools5-dev
           qttools5-dev-tools
           valgrind
           yasm
           zlib1g-dev

    - name: Source environment
      working-directory: ${{runner.workspace}}/TeamTalk5
      run: source env.sh

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: >-
           cmake $GITHUB_WORKSPACE -G Ninja
           -DBUILD_TEAMTALK_LIBRARY_UNITTEST_CATCH2=ON
           -DFEATURE_PORTAUDIO=OFF
           -DFEATURE_V4L2=OFF
           -DFEATURE_WEBRTC=OFF
           -DTOOLCHAIN_ACE=OFF
           -DTOOLCHAIN_CATCH2=ON
           -DTOOLCHAIN_FFMPEG=ON
           -DTOOLCHAIN_LIBVPX=OFF
           -DTOOLCHAIN_OGG=OFF
           -DTOOLCHAIN_OPENSSL=OFF
           -DTOOLCHAIN_OPUS=OFF
           -DTOOLCHAIN_SPEEX=OFF
           -DTOOLCHAIN_SPEEXDSP=OFF
           -DTOOLCHAIN_TINYXML=OFF
           -DTOOLCHAIN_ZLIB=OFF

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build .

    - name: Java Server API Test (non-encrypted)
      working-directory: ${{runner.workspace}}/TeamTalk5/Library/TeamTalkJNI
      run: make runjunitsrv
      env:
        ENCRYPTED: 0
        WEBRTC: 0

    - name: Java Server API Test (encrypted)
      working-directory: ${{runner.workspace}}/TeamTalk5/Library/TeamTalkJNI
      run: make runjunitsrv
      env:
        ENCRYPTED: 1
        WEBRTC: 0

    - name: Start TeamTalk Standard Server
      working-directory: ${{runner.workspace}}/TeamTalk5
      run: |
        cp Library/TeamTalkLib/test/tt5srv.xml_template Server/tt5srv.xml
        Server/tt5srv -d -c Server/tt5srv.xml

    - name: Start TeamTalk Pro Server (encrypted)
      working-directory: ${{runner.workspace}}/TeamTalk5
      run: |
        cp -f Library/TeamTalkLib/test/tt5prosrv.xml_template Server/tt5prosrv.xml
        cp Library/TeamTalkLib/test/ttservercert.pem Server/
        cp Library/TeamTalkLib/test/ttserverkey.pem Server/
        cp Library/TeamTalkLib/test/ca.cer Server/
        Server/tt5prosrv -d -wd Server/

    - name: Run PyTest
      working-directory: ${{runner.workspace}}/TeamTalk5
      run: |
        source env.sh
        pytest-3 Library/TeamTalkPy/test/teamtalk_test.py

    - name: Run Python client
      working-directory: ${{runner.workspace}}/TeamTalk5
      run: |
        source env.sh
        make -C Client/ttserverlogpy

    - name: Catch unit-test
      working-directory: ${{runner.workspace}}/TeamTalk5/Library/TeamTalkLib/test
      run: ./catchtt --durations yes

    - name: Stop TeamTalk Pro Server
      run: killall tt5prosrv

    - name: Java Unit-test (non-encrypted)
      working-directory: ${{runner.workspace}}/TeamTalk5/Library/TeamTalkJNI
      run: make runjunit
      env:
        ENCRYPTED: 0
        WEBRTC: 0

    - name: Stop TeamTalk Standard Server
      run: killall tt5srv

    - name: Start TeamTalk Pro Server (non-encrypted)
      working-directory: ${{runner.workspace}}/TeamTalk5
      run: |
        cp -f Library/TeamTalkLib/test/tt5srv.xml_template Server/tt5srv.xml
        Server/tt5prosrv -d -c Server/tt5srv.xml

    - name: Java Unit-test with shared audio devices (non-encrypted)
      working-directory: ${{runner.workspace}}/TeamTalk5/Library/TeamTalkJNI
      run: make runjunitpro
      env:
        ENCRYPTED: 0
        WEBRTC: 0
        INPUTDEVICEID: 4026
        OUTPUTDEVICEID: 4026

    - name: Stop TeamTalk Pro Server (non-encrypted)
      run: killall tt5prosrv

    - name: Start TeamTalk Pro Server (encrypted)
      working-directory: ${{runner.workspace}}/TeamTalk5
      run: |
        cp -f Library/TeamTalkLib/test/tt5prosrv.xml_template Server/tt5prosrv.xml
        cp Library/TeamTalkLib/test/ttservercert.pem Server/
        cp Library/TeamTalkLib/test/ttserverkey.pem Server/
        cp Library/TeamTalkLib/test/ca.cer Server/
        Server/tt5prosrv -d -wd Server/

    - name: Java Unit-test with virtual audio device (encrypted)
      working-directory: ${{runner.workspace}}/TeamTalk5/Library/TeamTalkJNI
      run: make runjunitpro
      env:
        ENCRYPTED: 1
        WEBRTC: 0

    - name: Stop TeamTalk Pro Server (encrypted)
      run: killall tt5prosrv
