name: Windows with Qt

on:
  push:
    paths:
      - 'Library/TeamTalkLib/TeamTalkDefs.h'

jobs:
  msvc:
    strategy:
      matrix:
        include:
          - name: VS2019Release32
            vmimage: windows-2019
            cmakeplatform: Win32
            arch: win32
            msystem: MINGW32
          - name: VS2019Release64
            vmimage: windows-2019
            cmakeplatform: x64
            arch: x64
            msystem: MINGW64

    runs-on: ${{ matrix.vmimage }}
    name: ${{ matrix.name }}
    steps:
    - uses: actions/checkout@v2

    # This makes 'nmake' available
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: Init TeamTalk Client submodules
      working-directory: ${{runner.workspace}}/TeamTalk5
      shell: cmd
      run: |
        git submodule update --init --recursive

    - name: Generate Qt Framework Build
      working-directory: ${{runner.workspace}}
      shell: cmd
      run: >-
        cmake -S TeamTalk5 -B qtbuild -A ${{ matrix.cmakeplatform }}
        -DQT_BUILD_QTFRAMEWORK=ON
        -DQT_INSTALL_PREFIX=${{runner.workspace}}/install/Qt

    - name: Build Qt Framework using CMake
      shell: cmd
      working-directory: ${{runner.workspace}}
      run: |
        cmake --build qtbuild --target Qt-src --parallel 8
        echo ${{runner.workspace}}\install\Qt\bin>> %GITHUB_PATH%
        echo QTDIR=${{runner.workspace}}\install\Qt>> %GITHUB_ENV%
        rmdir /S /Q qtbuild

    - name: Generate CMake Projects
      working-directory: ${{runner.workspace}}
      shell: cmd
      run: >-
        cmake -S TeamTalk5 -B output -A ${{ matrix.cmakeplatform }}
        -DBUILD_TEAMTALK_CORE=ON
        -DFEATURE_LIBVPX=OFF
        -DFEATURE_WEBRTC=OFF
        -DTOOLCHAIN_LIBVPX=OFF
        -DBUILD_TEAMTALK_CLIENT_DOTNET_EXAMPLE=OFF
        -DBUILD_TEAMTALK_CLIENT_QT_EXAMPLE=ON
        -DBUILD_TEAMTALK_PROCLIENT_QT_EXAMPLE=ON
        -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/install-teamtalk

    - name: Build CMake Projects
      working-directory: ${{runner.workspace}}
      shell: cmd
      run: |
        cmake --build output --parallel 8 --config Release

    - name: Install CMake Projects
      working-directory: ${{runner.workspace}}
      shell: cmd
      run: |
        cmake --build output --parallel 8 --target install

    # Doxygen doesn't exist as GitHub action, so use pacman from MSYS64
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        path-type: inherit
        install: make

    - name: Install Doxygen in MSYS64
      run: pacman --noconfirm -S doxygen
      shell: msys2 {0}

    - name: Generate Doxygen Document
      working-directory: ${{runner.workspace}}/TeamTalk5/Build
      run: make dox
      shell: msys2 {0}
      
    - name: Compile TeamTalk5.chm
      working-directory: ${{runner.workspace}}/TeamTalk5/Documentation/TeamTalk
      shell: cmd
      run: |
        "C:\Program Files (x86)\HTML Help Workshop\hhc.exe" output\index.hhp
        EXIT /B 0 

    - name: Make Portable Setup Targets
      working-directory: ${{runner.workspace}}/Setup/Portable
      run: make portable win32pro
      shell: msys2 {0}

    - uses: actions/upload-artifact@v2
      with:
        name: teamtalk-windows-${{ matrix.arch }}
        path: ${{runner.workspace}}/install-teamtalk

    - uses: actions/upload-artifact@v2
      with:
        name: teamtalk-portable-${{ matrix.arch }}
        path: ${{runner.workspace}}/TeamTalk5/Setup/Portable/TeamTalk_*_Portable

    - uses: actions/upload-artifact@v2
      with:
        name: teamtalkpro-${{ matrix.arch }}
        path: ${{runner.workspace}}/TeamTalk5/Setup/Portable/teamtalkpro-*-win32
