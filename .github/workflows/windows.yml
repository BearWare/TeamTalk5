name: Windows

on: [push]

env:
  # TeamTalk unit test environment variables
  INPUTDEVICEID: 1978
  OUTPUTDEVICEID: 1978
  VIDEODEVICEID: None
  VERBOSE: 0
  GITHUBSKIP: 1
  SKIPKNOWNBUGS: 1

jobs:
  msvc:
    strategy:
      matrix:
        include:
          - name: VS2019Release32
            vmimage: windows-2019
            cmakeplatform: Win32
            dotnetarch: x86
          - name: VS2019Release64
            vmimage: windows-2019
            cmakeplatform: x64
            dotnetarch: x64
    runs-on: ${{ matrix.vmimage }}
    name: ${{ matrix.name }}
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '11'
        architecture: ${{ matrix.dotnetarch }}

    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
        architecture: ${{ matrix.dotnetarch }}

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1

    - name: Init TeamTalk Client submodules
      working-directory: ${{runner.workspace}}/TeamTalk5
      run: |
        git submodule update --init --recursive

    - name: Generate CMake Projects
      working-directory: ${{runner.workspace}}
      shell: cmd
      run: >-
        cmake -S TeamTalk5 -B output -A ${{ matrix.cmakeplatform }}
        -DBUILD_TEAMTALK_CORE=ON
        -DCATCH_UNITTEST=ON
        -DFEATURE_LIBVPX=OFF
        -DFEATURE_WEBRTC=OFF
        -DTOOLCHAIN_LIBVPX=OFF
        -DBUILD_TEAMTALK_CLIENT_DOTNET_EXAMPLE=OFF
        -DCMAKE_INSTALL_PREFIX=${{runner.workspace}}/install-${{ matrix.dotnetarch }}

    - name: Build CMake Projects
      working-directory: ${{runner.workspace}}
      shell: cmd
      run: |
        cmake --build output --parallel 8 --config Release
        echo ${{runner.workspace}}\TeamTalk5\Library\TeamTalk_DLL>> %GITHUB_PATH%
        echo ${{runner.workspace}}\TeamTalk5\Library\TeamTalkJNI\libs>> %GITHUB_PATH%
        echo PYTHONPATH=${{runner.workspace}}\TeamTalk5\Library\TeamTalkPy>> %GITHUB_ENV%

    - name: Print environment
      shell: cmd
      run: set

    - name: Copy Server Configuration
      working-directory: ${{runner.workspace}}/TeamTalk5
      run: |
        copy Library\TeamTalkLib\test\tt5srv.xml_template Server\tt5srv.xml
        copy Library\TeamTalkLib\test\tt5prosrv.xml_template Server\tt5prosrv.xml
        copy Library\TeamTalkLib\test\ttserverkey.pem Server\
        copy Library\TeamTalkLib\test\ttservercert.pem Server\

    - name: Start TeamTalk Standard Service
      working-directory: ${{runner.workspace}}/TeamTalk5/Server
      shell: cmd
      run: |
        tt5svc.exe -i
        tt5svc.exe -s

    - name: Catch unit-test
      working-directory: ${{runner.workspace}}/TeamTalk5/Library/TeamTalkLib/test
      shell: cmd
      run: |
        catchtt.exe --durations yes

    - name: Restart TeamTalk Standard Service
      working-directory: ${{runner.workspace}}/TeamTalk5/Server
      shell: cmd
      run: |
        tt5svc.exe -e
        tt5svc.exe -s

    - name: Run .NET unit tests non-encrypted
      working-directory: ${{runner.workspace}}
      shell: cmd
      run: |
        cd output\Library\TeamTalk.NET\TeamTalkTest.NET\Release
        xcopy /S /Y /E ${{runner.workspace}}\TeamTalk5\Library\TeamTalkLib\test\testdata testdata\
        VSTest.Console.exe /Platform:${{ matrix.dotnetarch }} TeamTalk5Test.NET.dll

    - name: Run Python client
      working-directory: ${{runner.workspace}}/TeamTalk5/Client/ttserverlogpy
      run: |
        python main.py

    - name: Stop TeamTalk Standard Service
      working-directory: ${{runner.workspace}}/TeamTalk5/Server
      shell: cmd
      run: |
        tt5svc.exe -e

    - name: Uninstall TeamTalk Standard Service
      working-directory: ${{runner.workspace}}/TeamTalk5/Server
      shell: cmd
      run: |
        tt5svc.exe -u

    - name: Enable encryption
      shell: cmd
      run: |
        echo ENCRYPTED=true>> %GITHUB_ENV%

    - name: Start TeamTalk Professional Service
      working-directory: ${{runner.workspace}}/TeamTalk5/Server
      shell: cmd
      run: |
        tt5prosvc.exe -i
        tt5prosvc.exe -s

    - name: Run .NET unit tests encrypted
      working-directory: ${{runner.workspace}}
      shell: cmd
      run: |
        cd output\Library\TeamTalk.NET\TeamTalkTest.NET\Release
        xcopy /S /Y /E ${{runner.workspace}}\TeamTalk5\Library\TeamTalkLib\test\testdata testdata\
        VSTest.Console.exe /Platform:${{ matrix.dotnetarch }} TeamTalk5ProTest.NET.dll

    - name: Stop TeamTalk Professional Service
      working-directory: ${{runner.workspace}}/TeamTalk5/Server
      shell: cmd
      run: |
        tt5prosvc.exe -e

    - name: Uninstall TeamTalk Services
      working-directory: ${{runner.workspace}}/TeamTalk5/Server
      shell: cmd
      run: |
        tt5prosvc.exe -u

    - name: Install CMake Projects
      working-directory: ${{runner.workspace}}
      shell: cmd
      run: |
        cmake --build output --parallel 8 --target install

    - name: Upload Binary Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: teamtalksdk-windows-${{ matrix.dotnetarch }}
        path: ${{runner.workspace}}/install-${{ matrix.dotnetarch }}
