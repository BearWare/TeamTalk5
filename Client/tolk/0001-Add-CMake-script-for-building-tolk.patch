From cd93b63c164a0f0db10e173d19aa71c87c26a450 Mon Sep 17 00:00:00 2001
From: hwangsihu <129564966+hwangsihu@users.noreply.github.com>
Date: Tue, 21 Oct 2025 15:06:59 +0900
Subject: [PATCH] Add CMake script for building tolk

---
 CMakeLists.txt | 56 ++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 56 insertions(+)
 create mode 100644 CMakeLists.txt

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..8b7984a
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,56 @@
+cmake_minimum_required(VERSION 3.10)
+project(Tolk)
+
+option (TOLK_MULTITHREADED "Build Multi-Threaded (/MT) instead of Multi-Threaded DLL (/MD)" OFF)
+
+if (TOLK_MULTITHREADED)
+  foreach (flag_var
+      CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE
+      CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELWITHDEBINFO
+      CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE
+      CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
+    if (${flag_var} MATCHES "/MD")
+      STRING(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
+    endif()
+  endforeach(flag_var)
+endif()
+
+set (TOLK_COMPILE_FLAGS -D_EXPORTING -DUNICODE -D_UNICODE)
+set (TOLK_LINK_FLAGS User32 Ole32 OleAut32)
+
+# Find Java JDK so we can enable JNI support
+option (TOLK_WITH_JAVAJNI "Build Tolk with Java support" ON)
+if (TOLK_WITH_JAVAJNI)
+  find_package(JNI)
+
+  if (JNI_FOUND)
+    include_directories (${JNI_INCLUDE_DIRS})
+    list (APPEND TOLK_COMPILE_FLAGS -D_WITH_JNI)
+    list (APPEND TOLK_LINK_FLAGS ${JNI_LIBRARIES})
+  else()
+    message("Cannot find Java JDK. Specify JAVA_HOME environment variable to help CMake find Java JDK")
+  endif()
+endif()
+
+add_library(Tolk SHARED src/Tolk.cpp src/Tolk.h src/TolkVersion.h src/TolkJNI.cpp
+  src/ScreenReaderDriver.h src/Tolk.rc
+  src/ScreenReaderDriverJAWS.cpp src/ScreenReaderDriverJAWS.h
+  src/ScreenReaderDriverNVDA.cpp src/ScreenReaderDriverNVDA.h
+  src/ScreenReaderDriverSA.cpp src/ScreenReaderDriverSA.h
+  src/ScreenReaderDriverSNova.cpp src/ScreenReaderDriverSNova.h
+  src/ScreenReaderDriverWE.cpp src/ScreenReaderDriverWE.h
+  src/ScreenReaderDriverZT.cpp src/ScreenReaderDriverZT.h
+  src/ScreenReaderDriverSAPI.cpp src/ScreenReaderDriverSAPI.h
+  src/fsapi.c src/fsapi.h src/wineyes.c src/wineyes.h src/zt.c src/zt.h)
+
+target_include_directories (Tolk INTERFACE src)
+target_link_libraries (Tolk PRIVATE ${TOLK_LINK_FLAGS})
+target_compile_options (Tolk PRIVATE ${TOLK_COMPILE_FLAGS})
+
+install (TARGETS Tolk DESTINATION lib)
+install (FILES src/Tolk.h DESTINATION include)
+if (${CMAKE_GENERATOR_PLATFORM} MATCHES "x64")
+  install (FILES libs/x64/nvdaControllerClient64.dll libs/x64/SAAPI64.dll DESTINATION lib)
+else()
+  install (FILES libs/x86/dolapi32.dll libs/x86/nvdaControllerClient32.dll libs/x86/SAAPI32.dll DESTINATION lib)
+endif()
-- 
2.51.0.windows.2

